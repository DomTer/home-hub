generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model transactions_giro {
  id           Int      @id @default(autoincrement())
  text         String
  info         String
  date         DateTime
  valuta       DateTime
  type         String
  oppositeIban String
  oppositeName String
  value        Float
  currency     String
  income       Int
  raw          String
  hash         String   @unique
}

model transactions_creditcard {
  id           Int       @id @default(autoincrement())
  text         String
  text2        String
  bookingRef   String
  date         DateTime
  valuta       DateTime?
  exchangeRate Int
  value        Float
  currency     String
  income       Int
  raw          String    @db.Text
  hash         String    @unique
}

model Payment {
  text               String
  text2              String
  date               DateTime
  type               String
  oppositeIban       String?
  value              Float
  hash               String            @id
  categories         PaymentCategory[] @relation(references: [id])
  invoice            Invoice?
}

model PaymentCategory {
  id       Int       @id @default(autoincrement())
  name     String
  icon     String
  payments Payment[] @relation(references: [hash])
}

model RecurringInvoice {
  id          Int       @id @default(autoincrement())
  name        String
  descr       String?   @db.Text
  value       Float
  rotation    Int
  dueDay      Int?
  activeStart DateTime  @default(now())
  activeEnd   DateTime?
  active      Boolean
  invoices    Invoice[]
}

model Invoice {
  id                 Int               @id @default(autoincrement())
  name               String
  descr              String?           @db.Text
  value              Float
  created            DateTime          @default(now())
  recurringInvoice   RecurringInvoice? @relation(fields: [recurringInvoiceId], references: [id])
  recurringInvoiceId Int?
  payment            Payment?          @relation(fields: [paymentHash], references: [hash])
  paymentHash        String?           @unique
}
